name: Terraform

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project to manage'
        required: true
        default: 'EKS'
        type: choice
        options:
        - EKS
        - infra
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
      confirm_destroy:
        description: 'Type "DESTROY" to confirm (only for destroy action)'
        required: false
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.project }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        
    - name: Terraform Format Check
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform fmt -check -recursive
        
    - name: Terraform Init
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform init
        
    - name: Terraform Validate
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform validate
        
    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform plan -out=tfplan
        
    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform apply -auto-approve
        
    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy' && github.event.inputs.confirm_destroy == 'DESTROY'
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform destroy -auto-approve
        
    - name: Terraform Output
      if: github.event.inputs.action == 'apply'
      run: |
        cd infrastructure/${{ github.event.inputs.project }}
        terraform output

  terraform-destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        
    - name: Terraform Init - EKS
      run: |
        cd infrastructure/EKS
        terraform init
        
    - name: Terraform Destroy - EKS
      run: |
        cd infrastructure/EKS
        terraform destroy -auto-approve
        
    - name: Terraform Init - Infra
      run: |
        cd infrastructure/infra
        terraform init
        
    - name: Terraform Destroy - Infra
      run: |
        cd infrastructure/infra
        terraform destroy -auto-approve
